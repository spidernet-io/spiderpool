name: call e2e

env:
  CLUSTER_NAME: spider
  E2E_TIME_OUT: 60m
  PERFORMANCESCRIPT: "./tools/scripts/e2eperformance.sh"

on:
  workflow_call:
    inputs:
      ip_family:
        required: true
        type: string
      image_tag:
        required: true
        type: string
      ref:
        required: false
        type: string
      k8s_version:
        required: false
        type: string
      run_e2e:
        required: false
        type: string
        default: true
      e2e_labels:
        required: false
        type: string

jobs:
  call_e2e:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - e2e_init_mode: e2e_init_underlay
            e2e_test_mode: e2e_test_underlay
          - e2e_init_mode: e2e_init_cilium_with_ebpf
            e2e_test_mode: e2e_test_cilium_with_ebpf
          - e2e_init_mode: e2e_init_calico
            e2e_test_mode: e2e_test_calico
          - e2e_init_mode: e2e_init_cilium
            e2e_test_mode: e2e_test_cilium
    steps:
      - name: Free disk space
        # https://github.com/actions/virtual-environments/issues/709
        run: |
          echo "=========original CI disk space"
          df -h
          sudo rm -rf "/usr/local/share/boost"
          sudo rm -rf "$AGENT_TOOLSDIRECTORY"
          echo "=========after clean up, the left CI disk space"
          df -h

      - name: Prepare
        id: prepare
        run: |
          echo "ref: ${{ inputs.ref }} "
          echo "===== image "
          echo "ci image tag: ghcr.io/${{ github.repository }}/spiderpool-controller-ci:${{ inputs.image_tag }}"
          echo "ci race image tag: ghcr.io/${{ github.repository }}/spiderpool-controller-ci:${{ inputs.image_tag }}-race"
          echo "ci image tag: ghcr.io/${{ github.repository }}/spiderpool-agent-ci:${{ inputs.image_tag }}"
          echo "ci race image tag: ghcr.io/${{ github.repository }}/spiderpool-agent-ci:${{ inputs.image_tag }}-race"
          TMP=` date +%m%d%H%M%S `
          E2E_CLUSTER_NAME="spiderpool${TMP}"
          echo "E2E_CLUSTER_NAME=${E2E_CLUSTER_NAME}" >> $GITHUB_ENV
          echo "kind node image tag: ${{ inputs.k8s_version }}"

      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          persist-credentials: false
          ref: ${{ inputs.ref }}

      - name: Setup Golang
        uses: actions/setup-go@v3
        with:
          go-version: 1.20.0
          id: go

      # https://github.com/helm/kind-action
      - name: Install Kind Bin
        uses: helm/kind-action@v1.8.0
        with:
          install_only: true

      - name: Install Tools
        run: |
          # install kind/p2ctl/helm/ginkgo
          bash ./test/scripts/install-tools.sh

      - name: Download spiderpool-agent image
        uses: actions/download-artifact@v3
        with:
          name: image-tar-spiderpool-agent
          path: test/.download

      - name: Download spiderpool-controller image
        uses: actions/download-artifact@v3
        with:
          name: image-tar-spiderpool-controller
          path: test/.download

      - name: Load Images
        run: |
          TAR_FILES=` ls test/.download `
          echo $TAR_FILES
          for ITEM in $TAR_FILES ; do
              IMAGE_NAME=${ITEM%*.tar}
              echo ${IMAGE_NAME}
              cat test/.download/${ITEM} | docker import - ${IMAGE_NAME}:${{ inputs.image_tag }}
          done

      # test against commit version
      - name: Setup Kind Cluster
        uses: nick-invision/retry@v2
        with:
          timeout_minutes: 20
          max_attempts: 3
          shell: bash
          command: |
            make ${{ matrix.e2e_init_mode }} -e E2E_CLUSTER_NAME=${{ env.E2E_CLUSTER_NAME }} \
                -e E2E_SPIDERPOOL_TAG=${{ inputs.image_tag }} \
                -e SPIDERPOOL_AGENT_IMAGE_NAME=spiderpool-agent-race   \
                -e SPIDERPOOL_CONTROLLER_IMAGE_NAME=spiderpool-controller-race \
                -e E2E_IP_FAMILY=${{ inputs.ip_family }} -e PYROSCOPE_LOCAL_PORT="" \
                -e E2E_KIND_IMAGE_TAG=${{ inputs.k8s_version }} \
                -e INSTALL_KUBEVIRT=true

      - name: Run e2e Test
        id: run_e2e
        continue-on-error: true
        if: ${{ inputs.run_e2e == 'true' }}
        run: |
          E2E_LABELS=${{ inputs.e2e_labels }}
          echo "run e2e labels: ${E2E_LABELS}"
          RESULT=0
          make ${{ matrix.e2e_test_mode }} -e E2E_CLUSTER_NAME=${{ env.E2E_CLUSTER_NAME }}  \
              -e E2E_GINKGO_LABELS=${E2E_LABELS} \
              -e E2E_TIMEOUT=${{ env.E2E_TIME_OUT }} \
              -e INSTALL_MULTUS=true \
              -e E2E_IP_FAMILY=${{ inputs.ip_family }} || RESULT=1
          if ((RESULT==0)) ; then
              echo "RUN_E2E_PASS=true" >> $GITHUB_ENV
          else
              echo "RUN_E2E_PASS=false" >> $GITHUB_ENV
          fi
          if [ -f "test/e2edebugLog" ] ; then
              echo "UPLOAD_E2E_LOG=true" >> $GITHUB_ENV
          else
              echo "UPLOAD_E2E_LOG=false" >> $GITHUB_ENV
          fi
          if [ -f "./e2ereport.json" ] ; then
              echo "error, did not find e2e report"
              echo "UPLOAD_E2E_REPORT=true" >> $GITHUB_ENV
          else
              echo "UPLOAD_E2E_REPORT=false" >> $GITHUB_ENV
          fi

      - name: Upload e2e log
        if: ${{ inputs.run_e2e == 'true' }}
        uses: actions/upload-artifact@v3.1.3
        with:
          name: ${{ inputs.ip_family }}-${{ matrix.e2e_test_mode }}-${{ inputs.k8s_version }}-debuglog.txt
          path: test/e2edebugLog.txt
          retention-days: 7

      - name: Upload e2e report
        if: ${{ env.UPLOAD_E2E_REPORT == 'true' }}
        uses: actions/upload-artifact@v3.1.3
        with:
          name: ${{ inputs.ip_family }}-${{ matrix.e2e_test_mode }}-${{ inputs.k8s_version }}-e2ereport.json
          path: e2ereport.json
          retention-days: 1

      - name: helm uninstalls spiderpool and cleans spiderpool CRD
        id: clean
        if: ${{ inputs.run_e2e == 'true' }}
        run: |
          RESULT=0
          make clean_e2e_spiderpool || RESULT=1
          if ((RESULT==0)) ; then
              echo "CLEAN_E2E_PASS=true" >> $GITHUB_ENV
          else
              echo "CLEAN_E2E_PASS=false" >> $GITHUB_ENV
          fi

      - name: Show e2e Result
        if: ${{ inputs.run_e2e == 'true' }}
        run: |
          if ${{ env.RUN_E2E_PASS == 'true' && env.CLEAN_E2E_PASS == 'true' }} ;then
              exit 0
          else
              exit 1
          fi

      - name: Get the E2E Performance Result For Dual-stack
        id: get_performance
        if: ${{ inputs.run_e2e == 'true' && inputs.ip_family == 'dual' && matrix.e2e_test_mode == 'e2e_test_underlay' }}
        shell: bash
        run: |
          # sudo apt-get install -y jq
          TOOL_PATH=${{ env.PERFORMANCESCRIPT }}
          TODO_STATUS=$( ${TOOL_PATH}  "e2ereport.json"  )
          echo "PERFORMANCE_RESULT=${TODO_STATUS}" >> $GITHUB_ENV

      - name: Update Badge For Dual-stack
        if: ${{ inputs.run_e2e == 'true' && env.PERFORMANCE_RESULT != '' && inputs.ip_family == 'dual' }}
        uses: schneegans/dynamic-badges-action@v1.6.0
        with:
          auth: ${{ secrets.WELAN_PAT }}
          gistID: 38d00a872e830eedb46870c886549561
          filename: spiderpoolperformance.json
          label: performance
          message: ${{ env.PERFORMANCE_RESULT }}
          color: lightgrey
