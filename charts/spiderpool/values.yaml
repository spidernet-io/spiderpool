# Default values for spiderpool.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

## @section Global parameters
##
global:
  ## @param global.imageRegistryOverride Global Docker image registry
  imageRegistryOverride: ""

  ## @param global.nameOverride instance name
  ## default spiderpool
  nameOverride: ""

  ## @param global.clusterDnsDomain cluster dns domain
  clusterDnsDomain: "cluster.local"

  ## @param global.commonAnnotations Annotations to add to all deployed objects
  commonAnnotations: {}

  ## @param global.commonLabels Labels to add to all deployed objects
  commonLabels: {}
  #  label1: v1
  #  labele: v2

  ## @param global.ipamBinHostPath the host path of the IPAM plugin directory.
  ipamBinHostPath: /opt/cni/bin

  ## @param global.ipamUNIXSocketHostPath the host path of unix domain socket for ipam plugin
  ipamUNIXSocketHostPath: /var/run/spidernet/spiderpool.sock

  ## @param global.configName the configmap name
  configName: "spiderpool-conf"

## @section feature parameters
feature:
  ## @param feature.enableIPv4 enable ipv4
  enableIPv4: true

  ## @param feature.enableIPv6 enable ipv6
  enableIPv6: true

  ## @param feature.networkMode the network mode
  networkMode: legacy

  ## @param feature.enableStatefulSet the network mode
  enableStatefulSet: true

  gc:
    ## @param feature.gc.enabled enable retrieve IP in spiderippool CR
    enabled: true

    GcDeletingTimeOutPod:
      ## @param feature.gc.GcDeletingTimeOutPod.enabled enable retrieve IP for the pod who times out of deleting graceful period
      enabled: true

      ## @param feature.gc.GcDeletingTimeOutPod.delay the gc delay seconds after the pod times out of deleting graceful period
      delay: 0

## @section clusterDefaultPool parameters
##
clusterDefaultPool:
  ## @param clusterDefaultPool.installIPv4IPPool install ipv4 spiderpool instance
  installIPv4IPPool: false

  ## @param clusterDefaultPool.installIPv6IPPool install ipv6 spiderpool instance
  installIPv6IPPool: false

  ## @param clusterDefaultPool.ipv4IPPoolName the name of ipv4 spiderpool instance
  ipv4IPPoolName: "default-v4-ippool"

  ## @param clusterDefaultPool.ipv6IPPoolName the name of ipv6 spiderpool instance
  ipv6IPPoolName: "default-v6-ippool"

  ## @param clusterDefaultPool.ipv4Subnet the subnet of ipv4 spiderpool instance
  ipv4Subnet: ""

  ## @param clusterDefaultPool.ipv6Subnet the subnet of ipv6 spiderpool instance
  ipv6Subnet: ""

  ## @param clusterDefaultPool.ipv4IPRanges the available IP of ipv4 spiderpool instance
  ipv4IPRanges: []

  ## @param clusterDefaultPool.ipv6IPRanges the available IP of ipv6 spiderpool instance
  ipv6IPRanges: []

## @section spiderpoolAgent parameters
##
spiderpoolAgent:
  ## @param spiderpoolAgent.name the spiderpoolAgent name
  name: "spiderpool-agent"

  ## @param spiderpoolAgent.binName the binName name of spiderpoolAgent
  binName: "spiderpool-agent"

  image:
    ## @param spiderpoolAgent.image.registry the image registry of spiderpoolAgent
    registry: ghcr.io

    ## @param spiderpoolAgent.image.repository the image repository of spiderpoolAgent
    repository: spidernet-io/spiderpool/spiderpool-agent

    ## @param spiderpoolAgent.image.pullPolicy the image pullPolicy of spiderpoolAgent
    pullPolicy: IfNotPresent

    ## @param spiderpoolAgent.image.digest the image digest of spiderpoolAgent, which takes preference over tag
    digest: ""

    ## @param spiderpoolAgent.image.tag the image tag of spiderpoolAgent, overrides the image tag whose default is the chart appVersion.
    tag: ""

    ## @param spiderpoolAgent.image.imagePullSecrets the image imagePullSecrets of spiderpoolAgent
    imagePullSecrets: []
    # - name: "image-pull-secret"

  ## @skip spiderpoolAgent.nodeSelector.kubernetes.io/os
  nodeSelector:
    kubernetes.io/os: linux

  serviceAccount:
    ## @param spiderpoolAgent.serviceAccount.create create the service account for the spiderpoolAgent
    create: true
    ## @param spiderpoolAgent.serviceAccount.annotations the annotations of spiderpoolAgent service account
    annotations: {}

  ## @skip spiderpoolAgent.updateStrategy.rollingUpdate.maxUnavailable
  ## @skip spiderpoolAgent.updateStrategy.type
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate

  service:
    ## @param spiderpoolAgent.service.annotations the annotations for spiderpoolAgent service
    annotations: {}
    ## @param spiderpoolAgent.service.type the type for spiderpoolAgent service
    type: ClusterIP

  ## @skip spiderpoolAgent.tolerations
  # --  Node tolerations
  # ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
  tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/network-unavailable
      operator: Exists
    - key: node.kubernetes.io/not-ready
      effect: NoSchedule
    - key: node-role.kubernetes.io/master
      effect: NoSchedule
    - key: node-role.kubernetes.io/control-plane
      effect: NoSchedule
    - key: CriticalAddonsOnly
      operator: Exists

  ## @param spiderpoolAgent.priorityClassName the priority Class Name for spiderpoolAgent
  priorityClassName: "system-node-critical"

  ## @param spiderpoolAgent.affinity the affinity of spiderpoolAgent
  affinity: {}

  ## @param spiderpoolAgent.extraArgs the additional arguments of spiderpoolAgent container
  extraArgs: []

  ## @param spiderpoolAgent.extraEnv the additional environment variables of spiderpoolAgent container
  extraEnv: []

  ## @param spiderpoolAgent.extraVolumes the additional volumes of spiderpoolAgent container
  extraVolumes: []

  ## @param spiderpoolAgent.extraVolumeMounts the additional hostPath mounts of spiderpoolAgent container
  extraVolumeMounts: []

  ## @param spiderpoolAgent.podAnnotations the additional annotations of spiderpoolAgent pod
  podAnnotations: {}

  ## @param spiderpoolAgent.podLabels the additional label of spiderpoolAgent pod
  podLabels: {}

  resources:
    ## @param spiderpoolAgent.resources.limits.cpu the cpu limit of spiderpoolAgent pod
    ## @param spiderpoolAgent.resources.limits.memory the memory limit of spiderpoolAgent pod
    ## @param spiderpoolAgent.resources.requests.cpu the cpu requests of spiderpoolAgent pod
    ## @param spiderpoolAgent.resources.requests.memory the memory requests of spiderpoolAgent pod
    limits:
      cpu: 1000m
      memory: 1024Mi
    requests:
      cpu: 100m
      memory: 128Mi

  ## @param spiderpoolAgent.securityContext the security Context of spiderpoolAgent pod
  securityContext: {}
  # runAsUser: 0

  ## @param spiderpoolAgent.httpPort the http Port for spiderpoolAgent, for health checking
  httpPort: 5710

  healthChecking:
    startupProbe:
      ## @param spiderpoolAgent.healthChecking.startupProbe.failureThreshold the failure threshold of startup probe for spiderpoolAgent health checking
      failureThreshold: 60
      ## @param spiderpoolAgent.healthChecking.startupProbe.periodSeconds the period seconds of startup probe for spiderpoolAgent health checking
      periodSeconds: 2

    livenessProbe:
      ## @param spiderpoolAgent.healthChecking.livenessProbe.failureThreshold the failure threshold of startup probe for spiderpoolAgent health checking
      failureThreshold: 6
      ## @param spiderpoolAgent.healthChecking.livenessProbe.periodSeconds the period seconds of startup probe for spiderpoolAgent health checking
      periodSeconds: 10

    readinessProbe:
      ## @param spiderpoolAgent.healthChecking.readinessProbe.failureThreshold the failure threshold of startup probe for spiderpoolAgent health checking
      failureThreshold: 3
      ## @param spiderpoolAgent.healthChecking.readinessProbe.periodSeconds the period seconds of startup probe for spiderpoolAgent health checking
      periodSeconds: 10

  prometheus:
    ## @param spiderpoolAgent.prometheus.enabled enable spiderpool agent to collect metrics
    enabled: false

    ## @param spiderpoolAgent.prometheus.port the metrics port of spiderpool agent
    port: 5711

    serviceMonitor:
      ## @param spiderpoolAgent.prometheus.serviceMonitor.install install serviceMonitor for spiderpool agent. This requires the prometheus CRDs to be available
      install: false

      ## @param spiderpoolAgent.prometheus.serviceMonitor.namespace the serviceMonitor namespace. Default to the namespace of helm instance
      namespace: ""

      ## @param spiderpoolAgent.prometheus.serviceMonitor.annotations the additional annotations of spiderpoolAgent serviceMonitor
      annotations: {}

      ## @param spiderpoolAgent.prometheus.serviceMonitor.labels the additional label of spiderpoolAgent serviceMonitor
      labels: {}

    prometheusRule:
      ## @param spiderpoolAgent.prometheus.prometheusRule.install install prometheusRule for spiderpool agent. This requires the prometheus CRDs to be available
      install: false

      ## @param spiderpoolAgent.prometheus.prometheusRule.namespace the prometheusRule namespace. Default to the namespace of helm instance
      namespace: ""

      ## @param spiderpoolAgent.prometheus.prometheusRule.annotations the additional annotations of spiderpoolAgent prometheusRule
      annotations: {}

      ## @param spiderpoolAgent.prometheus.prometheusRule.labels the additional label of spiderpoolAgent prometheusRule
      labels: {}

    grafanaDashboard:
      ## @param spiderpoolAgent.prometheus.grafanaDashboard.install install grafanaDashboard for spiderpool agent. This requires the prometheus CRDs to be available
      install: false

      ## @param spiderpoolAgent.prometheus.grafanaDashboard.namespace the grafanaDashboard namespace. Default to the namespace of helm instance
      namespace: ""

      ## @param spiderpoolAgent.prometheus.grafanaDashboard.annotations the additional annotations of spiderpoolAgent grafanaDashboard
      annotations: {}

      ## @param spiderpoolAgent.prometheus.grafanaDashboard.labels the additional label of spiderpoolAgent grafanaDashboard
      labels: {}

  debug:
    ## @param spiderpoolAgent.debug.logLevel the log level of spiderpool agent [debug, info, warn, error, fatal, panic]
    logLevel: "info"
    ## @param spiderpoolAgent.debug.gopsPort the gops port of spiderpool agent
    gopsPort: 5712

## @section spiderpoolController parameters
##
spiderpoolController:
  ## @param spiderpoolController.name the spiderpoolController name
  name: "spiderpool-controller"

  ## @param spiderpoolController.replicas the replicas number of spiderpoolController pod
  replicas: 1

  ## @param spiderpoolController.binName the binName name of spiderpoolController
  binName: "spiderpool-controller"

  ## @param spiderpoolController.hostnetwork enable hostnetwork mode of spiderpoolController pod. Notice, if no CNI available before spiderpool installation, must enable this
  hostnetwork: true

  image:
    ## @param spiderpoolController.image.registry the image registry of spiderpoolController
    registry: ghcr.io

    ## @param spiderpoolController.image.repository the image repository of spiderpoolController
    repository: spidernet-io/spiderpool/spiderpool-controller

    ## @param spiderpoolController.image.pullPolicy the image pullPolicy of spiderpoolController
    pullPolicy: IfNotPresent

    ## @param spiderpoolController.image.digest the image digest of spiderpoolController, which takes preference over tag
    digest: ""

    ## @param spiderpoolController.image.tag the image tag of spiderpoolController, overrides the image tag whose default is the chart appVersion.
    tag: ""

    ## @param spiderpoolController.image.imagePullSecrets the image imagePullSecrets of spiderpoolController
    imagePullSecrets: []
    # - name: "image-pull-secret"

  ## @skip spiderpoolController.nodeSelector.kubernetes.io/os
  nodeSelector:
    kubernetes.io/os: linux

  serviceAccount:
    ## @param spiderpoolController.serviceAccount.create create the service account for the spiderpoolController
    create: true
    ## @param spiderpoolController.serviceAccount.annotations the annotations of spiderpoolController service account
    annotations: {}

  service:
    ## @param spiderpoolController.service.annotations the annotations for spiderpoolController service
    annotations: {}
    ## @param spiderpoolController.service.type the type for spiderpoolController service
    type: ClusterIP

  ## @skip spiderpoolController.tolerations
  tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/network-unavailable
      operator: Exists
    - key: node.kubernetes.io/not-ready
      effect: NoSchedule
    - key: node-role.kubernetes.io/master
      effect: NoSchedule
    - key: node-role.kubernetes.io/control-plane
      effect: NoSchedule
    - key: CriticalAddonsOnly
      operator: Exists

  ## @param spiderpoolController.priorityClassName the priority Class Name for spiderpoolController
  priorityClassName: "system-node-critical"

  ## @param spiderpoolController.affinity the affinity of spiderpoolController
  affinity: {}

  ## @param spiderpoolController.extraArgs the additional arguments of spiderpoolController container
  extraArgs: []

  ## @param spiderpoolController.extraEnv the additional environment variables of spiderpoolController container
  extraEnv: []

  ## @param spiderpoolController.extraVolumes the additional volumes of spiderpoolController container
  extraVolumes: []
    # - name: test-val
    #   mountPath: /host/tmp

  ## @param spiderpoolController.extraVolumeMounts the additional hostPath mounts of spiderpoolController container
  extraVolumeMounts: []
    # - name: test-val
    #   mountPath: /tmp

  ## @param spiderpoolController.podAnnotations the additional annotations of spiderpoolController pod
  podAnnotations: {}
    # test: 100

  ## @param spiderpoolController.podLabels the additional label of spiderpoolController pod
  podLabels: {}

  ## @param spiderpoolController.securityContext the security Context of spiderpoolController pod
  securityContext: {}
  # runAsUser: 0

  resources:
    ## @param spiderpoolController.resources.limits.cpu the cpu limit of spiderpoolController pod
    ## @param spiderpoolController.resources.limits.memory the memory limit of spiderpoolController pod
    ## @param spiderpoolController.resources.requests.cpu the cpu requests of spiderpoolController pod
    ## @param spiderpoolController.resources.requests.memory the memory requests of spiderpoolController pod
    limits:
      cpu: 500m
      memory: 1024Mi
    requests:
      cpu: 100m
      memory: 128Mi

  podDisruptionBudget:
    ## @param spiderpoolController.podDisruptionBudget.enabled enable podDisruptionBudget for spiderpoolController pod
    enabled: false

    ## @param spiderpoolController.podDisruptionBudget.minAvailable minimum number/percentage of pods that should remain scheduled.
    minAvailable: 1

  ## @param spiderpoolController.httpPort the http Port for spiderpoolController, for health checking and http service
  httpPort: 5720

  healthChecking:
    startupProbe:
      ## @param spiderpoolController.healthChecking.startupProbe.failureThreshold the failure threshold of startup probe for spiderpoolController health checking
      failureThreshold: 30

      ## @param spiderpoolController.healthChecking.startupProbe.periodSeconds the period seconds of startup probe for spiderpoolController health checking
      periodSeconds: 2

    livenessProbe:
      ## @param spiderpoolController.healthChecking.livenessProbe.failureThreshold the failure threshold of startup probe for spiderpoolController health checking
      failureThreshold: 6

      ## @param spiderpoolController.healthChecking.livenessProbe.periodSeconds the period seconds of startup probe for spiderpoolController health checking
      periodSeconds: 10

    readinessProbe:
      ## @param spiderpoolController.healthChecking.readinessProbe.failureThreshold the failure threshold of startup probe for spiderpoolController health checking
      failureThreshold: 3

      ## @param spiderpoolController.healthChecking.readinessProbe.periodSeconds the period seconds of startup probe for spiderpoolController health checking
      periodSeconds: 10

  ## @param spiderpoolController.webhookPort the http port for spiderpoolController webhook
  webhookPort: 5722

  prometheus:
    ## @param spiderpoolController.prometheus.enabled enable spiderpool Controller to collect metrics
    enabled: false

    ## @param spiderpoolController.prometheus.port the metrics port of spiderpool Controller
    port: 5721

    serviceMonitor:
      ## @param spiderpoolController.prometheus.serviceMonitor.install install serviceMonitor for spiderpool agent. This requires the prometheus CRDs to be available
      install: false

      ## @param spiderpoolController.prometheus.serviceMonitor.namespace the serviceMonitor namespace. Default to the namespace of helm instance
      namespace: ""

      ## @param spiderpoolController.prometheus.serviceMonitor.annotations the additional annotations of spiderpoolController serviceMonitor
      annotations: {}

      ## @param spiderpoolController.prometheus.serviceMonitor.labels the additional label of spiderpoolController serviceMonitor
      labels: {}

    prometheusRule:
      ## @param spiderpoolController.prometheus.prometheusRule.install install prometheusRule for spiderpool agent. This requires the prometheus CRDs to be available
      install: false

      ## @param spiderpoolController.prometheus.prometheusRule.namespace the prometheusRule namespace. Default to the namespace of helm instance
      namespace: ""

      ## @param spiderpoolController.prometheus.prometheusRule.annotations the additional annotations of spiderpoolController prometheusRule
      annotations: {}

      ## @param spiderpoolController.prometheus.prometheusRule.labels the additional label of spiderpoolController prometheusRule
      labels: {}

    grafanaDashboard:
      ## @param spiderpoolController.prometheus.grafanaDashboard.install install grafanaDashboard for spiderpool agent. This requires the prometheus CRDs to be available
      install: false

      ## @param spiderpoolController.prometheus.grafanaDashboard.namespace the grafanaDashboard namespace. Default to the namespace of helm instance
      namespace: ""

      ## @param spiderpoolController.prometheus.grafanaDashboard.annotations the additional annotations of spiderpoolController grafanaDashboard
      annotations: {}

      ## @param spiderpoolController.prometheus.grafanaDashboard.labels the additional label of spiderpoolController grafanaDashboard
      labels: {}

  debug:
    ## @param spiderpoolController.debug.logLevel the log level of spiderpool Controller [debug, info, warn, error, fatal, panic]
    logLevel: "info"

    ## @param spiderpoolController.debug.gopsPort the gops port of spiderpool Controller
    gopsPort: 5724

  ## TLS configuration for webhook
  tls:
    ## @param spiderpoolController.tls.method the method for generating TLS certificates. [ provided , certmanager ]
    ## - provided:     provide all certificates by helm options
    ## - certmanager:  This method use cert-manager to generate & rotate certificates.
    method: provided

    ## @param spiderpoolController.tls.secretName the secret name for storing TLS certificates
    secretName: "spiderpool-controller-server-certs"

    ## for certmanager method
    certmanager:
      ## @param spiderpoolController.tls.certmanager.certValidityDuration generated certificates validity duration in days for 'certmanager' method
      certValidityDuration: 365

      ## @param spiderpoolController.tls.certmanager.issuerName issuer name of cert manager 'certmanager'. If not specified, a CA issuer will be created.
      issuerName: ""

      ## @param spiderpoolController.tls.certmanager.extraDnsNames extra DNS names added to certificate when it's auto generated
      extraDnsNames: []

      ## @param spiderpoolController.tls.certmanager.extraIPAddresses extra IP addresses added to certificate when it's auto generated
      extraIPAddresses: []

    ## for provided method
    provided:
      ## @param spiderpoolController.tls.provided.tlsCert encoded tls certificate for provided method
      ## @param spiderpoolController.tls.provided.tlsKey encoded tls key for provided method
      ## @param spiderpoolController.tls.provided.tlsCa encoded tls CA for provided method
      tlsCert: ""
      tlsKey: ""
      tlsCa: ""
