# auto generating changelog to directory /changelogs/*** of branch github_pages
# auto generate changelog by the related-label history PR between tags,
# commit changelog: changelogs/CHANGELOG-{begin_tag}-to-{end_tag}.md

name: Call Release Changelog

on:
  workflow_call:
    inputs:
      dest_tag:
        required: true
        type: string
    outputs:
      artifact:
        description: "name of changelog artifact"
        value: changelog_artifact
  workflow_dispatch:
    inputs:
      dest_tag:
        description: 'last commit based on which tag'
        required: true
        default: v1.0.0
      begin_tag:
        description: 'start commit based on which tag'
        required: false
        default: v1.0.0

env:
  DEST_BRANCH: github_pages
  DEST_DIRECTORY: 'changelogs/'
  PR_LABEL: pr/release/robot_update_githubpage
  PR_REVIWER: weizhoublue
  CHANGELOG_CONF: .github/changelog_builder_conf.json

jobs:
  get_ref:
    runs-on: ubuntu-latest
    outputs:
      dest_tag: ${{ steps.get_ref.outputs.dest_tag }}
      begin_tag: ${{ steps.get_ref.outputs.begin_tag }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Get Ref
        id: get_ref
        run: |
          if ${{ inputs.dest_tag != '' }} ; then
              echo "call by workflow_call"
              dest_tag=${{ inputs.dest_tag }}
              [ -z "$dest_tag" ] && echo "empty dest_tag" && exit 1
              if ! git describe --tags --abbrev=0  ${dest_tag} &>/dev/null ; then
                  echo "error, does not exist dest_tag ${dest_tag} "
                  exit 1
              fi
              echo ::set-output name=dest_tag::${dest_tag}
              exit 0
          elif ${{ github.event_name == 'workflow_dispatch' }} ; then
              echo "call by workflow_dispatch"
              dest_tag=${{ github.event.inputs.dest_tag }}
              begin_tag=${{ github.event.inputs.begin_tag }}
              [ -z "$dest_tag" ] && echo "empty dest_tag" && exit 1
              if ! git describe --tags --abbrev=0  ${dest_tag} &>/dev/null ; then
                  echo "error, does not exist dest_tag ${dest_tag} "
                  exit 1
              fi
              if [ -n "$begin_tag" ] && ! git describe --tags --abbrev=0  ${begin_tag} &>/dev/null ; then
                  echo "error, does not exist begin_tag ${begin_tag} "
                  exit 1
              fi
              echo ::set-output name=dest_tag::${dest_tag}
              [ -n "$begin_tag" ] && echo ::set-output name=begin_tag::${begin_tag}
              exit 0
          else
              echo "unexpected event: ${{ github.event_name }}"
              exit 1
          fi

  generate_changelog:
    name: generate release changelog
    needs: [get_ref]
    runs-on: ubuntu-latest
    outputs:
      dest_tag: ${{ steps.generate_changelog_file.outputs.dest_tag }}
      begin_tag: ${{ steps.generate_changelog_file.outputs.begin_tag }}
    env:
      CHANGELOG_TMP_FILE: './_temp_changelog'
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Build Changelog With Specified Start
        id: create_changelog_by_manul_tag
        if: ${{ needs.get_ref.outputs.begin_tag != '' }}
        uses: mikepenz/release-changelog-builder-action@v3
        with:
          configuration: ${{ env.CHANGELOG_CONF }}
          outputFile: ${{ env.CHANGELOG_TMP_FILE }}
          fromTag: ${{ needs.get_ref.outputs.begin_tag }}
          toTag: ${{ needs.get_ref.outputs.to_tag }}
          failOnError: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Changelog By Auto Tag
        id: create_changelog_by_auto_tag
        if: ${{ needs.get_ref.outputs.begin_tag == '' }}
        uses: mikepenz/release-changelog-builder-action@v3
        with:
          configuration: ${{ env.CHANGELOG_CONF }}
          toTag: ${{ needs.get_ref.outputs.begin_tag }}
          outputFile: ${{ env.CHANGELOG_TMP_FILE }}
          failOnError: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate Changelog File
        id: generate_changelog_file
        continue-on-error: false
        if: steps.create_changelog_by_auto_tag.outputs.failed == 'false' ||  steps.create_changelog_by_manul_tag.outputs.failed == 'false'
        run: |
          if [ ! -f "${{ env.CHANGELOG_TMP_FILE }}" ] ; then
               echo "failed to find auto-generated changelog result file $TEMP_FILE"
               exit 1
          fi
          if ${{ steps.create_changelog_by_auto_tag.outputs.failed == 'false' }} ; then
              CHANGELOG_FILE_NAME=${{ steps.create_changelog_by_auto_tag.outputs.fromTag }}-to-${{ steps.create_changelog_by_auto_tag.outputs.toTag }}.md
              echo ::set-output name=dest_tag::${{ steps.create_changelog_by_auto_tag.outputs.toTag }}
              echo ::set-output name=begin_tag::${{ steps.create_changelog_by_auto_tag.outputs.fromTag }}
          else
              CHANGELOG_FILE_NAME=${{ steps.create_changelog_by_manul_tag.outputs.fromTag }}-to-${{ steps.create_changelog_by_manul_tag.outputs.toTag }}.md
              echo ::set-output name=dest_tag::${{ steps.create_changelog_by_manul_tag.outputs.toTag }}
              echo ::set-output name=begin_tag::${{ steps.create_changelog_by_manul_tag.outputs.fromTag }}
          fi
          echo ::set-output name=changelog_path::${CHANGELOG_FILE_NAME}
          mv ${{ env.CHANGELOG_TMP_FILE }}  ${CHANGELOG_FILE_NAME}
          cat ${CHANGELOG_FILE_NAME}

      - name: Upload Changelog
        uses: actions/upload-artifact@v3.0.0
        with:
          name: changelog_artifact
          path: ${{ steps.generate_changelog_file.outputs.changelog_path }}
          retention-days: 1
          if-no-files-found: error

  update_githubpage:
    runs-on: ubuntu-latest
    needs: [generate_changelog]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          ref: ${{ env.DEST_BRANCH }}

      - name: Download Artifact
        uses: actions/download-artifact@v3.0.0
        with:
          name: changelog_artifact
          path: ${{ env.DEST_DIRECTORY }}

      - name: Create Pull Request
        id: create_pr
        uses: peter-evans/create-pull-request@v4
        with:
          title: "robot update changelog with tag ${{ needs.generate_changelog.outputs.dest_tag }} to branch ${{ env.DEST_BRANCH }} "
          commit-message: "robot update changelog from tag ${{ needs.generate_changelog.outputs.begin_tag }} to tag ${{ needs.generate_changelog.outputs.dest_tag }} "
          branch-suffix: timestamp
          branch: robot/update_changelog
          delete-branch: true
          base: ${{ env.DEST_BRANCH }}
          signoff: true
          token: ${{ secrets.GITHUB_TOKEN }}
          labels: ${{ env.PR_LABEL }}
          reviewers: ${{ env.PR_REVIWER }}
