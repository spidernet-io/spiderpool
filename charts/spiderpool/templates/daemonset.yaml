apiVersion: apps/v1
kind: DaemonSet
metadata:
  name:  {{ .Values.spiderpoolAgent.name | trunc 63 | trimSuffix "-" }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "spiderpool.spiderpoolAgent.labels" . | nindent 4 }}
    {{- if .Values.commonLabels }}
    {{- include "tplvalues.render" ( dict "value" .Values.commonLabels "context" $ ) | nindent 4 }}
    {{- end }}
  {{- if .Values.commonAnnotations }}
  annotations:
    {{- include "tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
  {{- end }}
spec:
  selector:
    matchLabels:
      {{- include "spiderpool.spiderpoolAgent.selectorLabels" . | nindent 6 }}
  {{- with .Values.spiderpoolAgent.updateStrategy }}
  updateStrategy:
    {{- toYaml . | trim | nindent 4 }}
  {{- end }}
  template:
    metadata:
      {{- if or .Values.spiderpoolAgent.podAnnotations .Values.commonAnnotations }}
      annotations:
        {{- if .Values.commonAnnotations }}
          {{- include "tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 8 }}
          {{- end }}
          {{- if .Values.spiderpoolAgent.podAnnotations }}
          {{- include "tplvalues.render" ( dict "value" .Values.spiderpoolAgent.podAnnotations "context" $ ) | nindent 8 }}
          {{- end }}
          {{- end }}
      labels:
        {{- include "spiderpool.spiderpoolAgent.selectorLabels" . | nindent 8 }}
          {{- if .Values.commonLabels }}
          {{- include "tplvalues.render" ( dict "value" .Values.commonLabels "context" $ ) | nindent 8 }}
          {{- end }}
    spec:
      {{- if .Values.spiderpoolAgent.image.imagePullSecrets }}
      imagePullSecrets:
      {{- with .Values.spiderpoolAgent.image.imagePullSecrets }}
      {{- toYaml . | trim | nindent 6 }}
      {{- end }}
      {{- end }}
      serviceAccountName: {{ .Values.spiderpoolAgent.name | trunc 63 | trimSuffix "-" }}
      priorityClassName: {{ default "system-node-critical" .Values.spiderpoolAgent.priorityClassName }}
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      restartPolicy: Always
      {{- with .Values.spiderpoolAgent.tolerations }}
      tolerations:
      {{- toYaml . | nindent 6 }}
      {{- end }}
      {{- with .Values.spiderpoolAgent.nodeSelector }}
      nodeSelector:
      {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.spiderpoolAgent.affinity }}
      affinity:
      {{- include "tplvalues.render" (dict "value" .Values.spiderpoolAgent.affinity "context" $) | nindent 6 }}
      {{- else }}
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: kubernetes.io/os
                    operator: In
                    values:
                      - linux
              # Compatible with Kubernetes 1.12.x and 1.13.x
              - matchExpressions:
                  - key: beta.kubernetes.io/os
                    operator: In
                    values:
                      - linux
      {{- end }}
      containers:
      - name: {{ .Values.spiderpoolAgent.name | trunc 63 | trimSuffix "-" }}
        {{- if .Values.spiderpoolAgent.image.digest }}
        image: "{{ .Values.spiderpoolAgent.image.repository }}@{{ .Values.spiderpoolAgent.image.digest }}"
        {{- else }}
        image: "{{ .Values.spiderpoolAgent.image.repository }}:{{ default .Chart.AppVersion .Values.spiderpoolAgent.image.tag }}"
        {{- end }}
        imagePullPolicy: {{ .Values.spiderpoolAgent.image.pullPolicy }}
        command:
        - {{ .Values.spiderpoolAgent.binName }}
        args:
        - daemon
        - --config-dir=/tmp/spiderpool/config-map
        - --ipam-config-dir=/tmp/spiderpool/ipam-plugin-config-map
        {{- with .Values.spiderpoolAgent.extraArgs }}
        {{- toYaml . | trim | nindent 8 }}
        {{- end }}
        {{- if .Values.spiderpoolAgent.prometheus.enabled }}
        ports:
        - name: prometheus
          containerPort: {{ .Values.spiderpoolAgent.prometheus.port }}
          protocol: TCP
        {{- end }}
        {{- if semverCompare ">=1.20-0" .Capabilities.KubeVersion.Version }}
        startupProbe:
          httpGet:
            host: {{ .Values.configmap.config.enableIpv4 | ternary "127.0.0.1" "::1" | quote }}
            path: /v1/runtime/startup
            port: {{ .Values.spiderpoolAgent.httpPort }}
            scheme: HTTP
            httpHeaders:
              - name: "checkType"
                value: "startupProbe"
          failureThreshold: {{ .Values.spiderpoolAgent.healthChecking.startupProbe.failureThreshold }}
          periodSeconds: {{ .Values.spiderpoolAgent.healthChecking.startupProbe.periodSeconds }}
          successThreshold: 1
        {{- end }}
        livenessProbe:
          httpGet:
            host: {{ .Values.configmap.config.enableIpv4 | ternary "127.0.0.1" "::1" | quote }}
            path: /v1/runtime/liveness
            port: {{ .Values.spiderpoolAgent.httpPort }}
            scheme: HTTP
            httpHeaders:
              - name: "checkType"
                value: "livenessProbe"
          initialDelaySeconds: 60
          periodSeconds: {{ .Values.spiderpoolAgent.healthChecking.livenessProbe.periodSeconds }}
          successThreshold: 1
          failureThreshold: {{ .Values.spiderpoolAgent.healthChecking.livenessProbe.failureThreshold }}
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            host: {{ .Values.configmap.config.enableIpv4 | ternary "127.0.0.1" "::1" | quote }}
            path: /v1/runtime/readiness
            port: {{ .Values.spiderpoolAgent.httpPort }}
            scheme: HTTP
            httpHeaders:
              - name: "checkType"
                value: "readinessProbe"
          initialDelaySeconds: 5
          periodSeconds: {{ .Values.spiderpoolAgent.healthChecking.readinessProbe.periodSeconds }}
          successThreshold: 1
          failureThreshold: {{ .Values.spiderpoolAgent.healthChecking.readinessProbe.failureThreshold }}
          timeoutSeconds: 5
        {{- with .Values.spiderpoolAgent.resources }}
        resources:
        {{- toYaml . | trim | nindent 10 }}
        {{- end }}
        lifecycle:
          preStop:
            exec:
              command:
                - {{ .Values.spiderpoolAgent.binName }}
                - shutdown
        env:
        - name: SPIDERPOOL_LOG_LEVEL
          value: {{ .Values.spiderpoolAgent.debug.logLevel | quote }}
        - name: SPIDERPOOL_ENABLED_PPROF
          value: {{ .Values.spiderpoolAgent.debug.pprofEnabled | quote }}
        - name: SPIDERPOOL_ENABLED_METRIC
          value: {{ .Values.spiderpoolAgent.prometheus.enabled | quote }}
        - name: SPIDERPOOL_METRIC_HTTP_PORT
          value: {{ .Values.spiderpoolAgent.prometheus.port | quote }}
        - name: SPIDERPOOL_HTTP_PORT
          value: {{ .Values.spiderpoolAgent.httpPort | quote }}
        {{- with .Values.spiderpoolAgent.extraEnv }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
        {{- with .Values.spiderpoolAgent.securityContext }}
        securityContext:
        {{- toYaml . | nindent 8 }}
        {{- end }}
        volumeMounts:
        - name: config-path
          mountPath: /tmp/spiderpool/config-map
          readOnly: true
        - name: ipam-plugin-config-path
          mountPath: /tmp/spiderpool/ipam-plugin-config-map
          readOnly: true
        - name: etc-cni-conf-path
          mountPath: /host/{{ .Values.ipamPlugin.confPath }}
        - name: cni-bin-path
          mountPath: /host/{{ .Values.ipamPlugin.binPath }}
        {{- if .Values.spiderpoolAgent.extraVolumes }}
        {{- include "tplvalues.render" ( dict "value" .Values.spiderpoolAgent.extraVolumeMounts "context" $ ) | nindent 8 }}
        {{- end }}
      volumes:
        # To read the configuration from the config map
      - name: config-path
        configMap:
          defaultMode: 0400
          name: {{ .Values.configmap.configCmName }}
        # To read the configuration from the config map
      - name: ipam-plugin-config-path
        configMap:
          defaultMode: 0400
          name: {{ .Values.configmap.ipamCmName }}
        # To install cilium cni configuration in the host
      - name: etc-cni-conf-path
        hostPath:
          path: {{ .Values.ipamPlugin.confPath }}
          type: DirectoryOrCreate
        # To install cilium cni plugin in the host
      - name: cni-bin-path
        hostPath:
          path:  {{ .Values.ipamPlugin.binPath }}
          type: DirectoryOrCreate
      {{- if .Values.spiderpoolAgent.extraVolumeMounts }}
      {{- include "tplvalues.render" ( dict "value" .Values.spiderpoolAgent.extraVolumeMounts "context" $ ) | nindent 6 }}
      {{- end }}
