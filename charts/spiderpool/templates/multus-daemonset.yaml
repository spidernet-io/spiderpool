{{- if .Values.multus.multusCNI.install -}}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: network-attachment-definitions.k8s.cni.cncf.io
spec:
  group: k8s.cni.cncf.io
  scope: Namespaced
  names:
    plural: network-attachment-definitions
    singular: network-attachment-definition
    kind: NetworkAttachmentDefinition
    shortNames:
      - net-attach-def
  versions:
    - name: v1
      served: true
      storage: true
      schema:
        openAPIV3Schema:
          description: 'NetworkAttachmentDefinition is a CRD schema specified by the Network Plumbing
            Working Group to express the intent for attaching pods to one or more logical or physical
            networks. More information available at: https://github.com/k8snetworkplumbingwg/multi-net-spec'
          type: object
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this represen
                tation of an object. Servers should convert recognized schemas to the
                latest internal value, and may reject unrecognized values. More info:
                https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this
                object represents. Servers may infer this from the endpoint the client
                submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: 'NetworkAttachmentDefinition spec defines the desired state of a network attachment'
              type: object
              properties:
                config:
                  description: 'NetworkAttachmentDefinition config is a JSON-formatted CNI configuration'
                  type: string
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: {{ .Values.multus.name | trunc 63 | trimSuffix "-" }}
rules:
  - apiGroups: ["k8s.cni.cncf.io"]
    resources:
      - '*'
    verbs:
      - '*'
  - apiGroups:
      - ""
    resources:
      - pods
      - pods/status
    verbs:
      - get
      - update
  - apiGroups:
      - ""
      - events.k8s.io
    resources:
      - events
    verbs:
      - create
      - patch
      - update
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: {{ .Values.multus.name | trunc 63 | trimSuffix "-" }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: {{ .Values.multus.name | trunc 63 | trimSuffix "-" }}
subjects:
  - kind: ServiceAccount
    name: {{ .Values.multus.name | trunc 63 | trimSuffix "-" }}
    namespace: {{ .Release.Namespace | quote }}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ .Values.multus.name | trunc 63 | trimSuffix "-" }}
  namespace: {{ .Release.Namespace | quote }}
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: {{ .Values.multus.multusCNI.configmapName | trunc 63 | trimSuffix "-" }}
  namespace: {{ .Release.Namespace | quote }}
  labels:
    {{- include "spiderpool.multus.labels" . | nindent 4 }}
    {{- if .Values.global.commonLabels }}
    {{- include "tplvalues.render" ( dict "value" .Values.global.commonLabels "context" $ ) | nindent 4 }}
    {{- end }}
data:
  # NOTE: If you'd prefer to manually apply a configuration file, you may create one here.
  # In the case you'd like to customize the Multus installation, you should change the arguments to the Multus pod
  # change the "args" line below from
  # - "--multus-conf-file=auto"
  # to:
  # "--multus-conf-file=/tmp/multus-conf/70-multus.conf"
  # Additionally -- you should ensure that the name "70-multus.conf" is the alphabetically first name in the
  # /etc/cni/net.d/ directory on each node, otherwise, it will not be used by the Kubelet.
  cni-conf.json: |
    {
      "cniVersion": "0.3.1",
      "name": "multus-cni-network",
      "type": "multus",
      "confDir": "/etc/cni/net.d/" ,
      "logLevel": "{{ .Values.multus.multusCNI.log.logLevel }}",
      "logFile": "{{ .Values.multus.multusCNI.log.logFile }}",
      "capabilities": {
        "portMappings": true,
        "bandwidth": true
      },
      "namespaceIsolation": false,
      "clusterNetwork": "{{ .Values.multus.multusCNI.defaultCNIName }}",
      "defaultNetworks": [],
      "multusNamespace": "",
      "systemNamespaces": [],
      "kubeconfig": "/etc/cni/net.d/multus.d/multus.kubeconfig"
    }
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: kube-multus-ds
  namespace: {{ .Release.Namespace | quote }}
  labels:
    {{- include "spiderpool.multus.labels" . | nindent 4 }}
    {{- if .Values.global.commonLabels }}
    {{- include "tplvalues.render" ( dict "value" .Values.global.commonLabels "context" $ ) | nindent 4 }}
    {{- end }}
  {{- if .Values.global.commonAnnotations }}
  annotations:
    {{- include "tplvalues.render" ( dict "value" .Values.global.commonAnnotations "context" $ ) | nindent 4 }}
  {{- end }}
spec:
  selector:
    matchLabels:
      {{- include "spiderpool.multus.selectorLabels" . | nindent 6 }}
  {{- with .Values.multus.multusCNI.updateStrategy }}
  updateStrategy:
    {{- toYaml . | trim | nindent 4 }}
  {{- end }}
  template:
    metadata:
      annotations:
        {{- if .Values.global.commonAnnotations }}
        {{- include "tplvalues.render" ( dict "value" .Values.global.commonAnnotations "context" $ ) | nindent 8 }}
        {{- end }}
        {{- if .Values.multus.multusCNI.podAnnotations }}
        {{- include "tplvalues.render" ( dict "value" .Values.multus.multusCNI.podAnnotations "context" $ ) | nindent 8 }}
        {{- end }}
      labels:
        {{- include "spiderpool.multus.selectorLabels" . | nindent 8 }}
        {{- if .Values.global.commonLabels }}
        {{- include "tplvalues.render" ( dict "value" .Values.global.commonLabels "context" $ ) | nindent 8 }}
        {{- end }}
        {{- if .Values.multus.multusCNI.podLabels }}
        {{- include "tplvalues.render" ( dict "value" .Values.multus.multusCNI.podLabels "context" $ ) | nindent 8 }}
        {{- end }}
    spec:
      hostNetwork: true
      tolerations:
        - operator: Exists
          effect: NoSchedule
      serviceAccountName: {{ .Values.multus.name | trunc 63 | trimSuffix "-" }}
      containers:
        - name: kube-multus
          imagePullPolicy: {{ .Values.multus.multusCNI.image.pullPolicy}}
          image: {{ include "spiderpool.multus.image" . | quote }}
          command: ["/entrypoint.sh"]
          args:
            - "--multus-conf-file=/tmp/multus-conf/00-multus.conf"
            - "--cni-version=0.3.1"
            {{- with .Values.multus.multusCNI.extraArgs }}
            {{- toYaml . | trim | nindent 12 }}
            {{- end }}
          {{- if .Values.multus.multusCNI.extraEnv }}
          env:
            {{- with .Values.multus.multusCNI.extraEnv }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
          {{- end }}
          {{- with .Values.multus.multusCNI.resources }}
          resources:
          {{- toYaml . | trim | nindent 12 }}
          {{- end }}
          {{- with .Values.multus.multusCNI.securityContext }}
          securityContext:
          {{- toYaml . | nindent 12 }}
          {{- end }}
          volumeMounts:
            - name: cni
              mountPath: /host/etc/cni/net.d
            - name: cnibin
              mountPath: /host/opt/cni/bin
            - name: multus-cfg
              mountPath: /tmp/multus-conf
            {{- if .Values.multus.multusCNI.extraVolumes }}
            {{- include "tplvalues.render" ( dict "value" .Values.multus.multusCNI.extraVolumeMounts "context" $ ) | nindent 12 }}
            {{- end }}
      terminationGracePeriodSeconds: 10
      volumes:
        - name: cni
          hostPath:
            path: /etc/cni/net.d
        - name: cnibin
          hostPath:
            path: /opt/cni/bin
        - name: multus-cfg
          configMap:
            name: {{ .Values.multus.multusCNI.configmapName | trunc 63 | trimSuffix "-" }}
            items:
              - key: cni-conf.json
                path: 00-multus.conf
        {{- if .Values.multus.multusCNI.extraVolumeMounts }}
        {{- include "tplvalues.render" ( dict "value" .Values.multus.multusCNI.extraVolumeMounts "context" $ ) | nindent 8 }}
        {{- end }}
{{- end }}