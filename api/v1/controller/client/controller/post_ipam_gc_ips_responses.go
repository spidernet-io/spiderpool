// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2022 Authors of spidernet-io
// SPDX-License-Identifier: Apache-2.0

package controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// PostIpamGcIpsReader is a Reader for the PostIpamGcIps structure.
type PostIpamGcIpsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostIpamGcIpsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostIpamGcIpsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 500:
		result := NewPostIpamGcIpsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPostIpamGcIpsOK creates a PostIpamGcIpsOK with default headers values
func NewPostIpamGcIpsOK() *PostIpamGcIpsOK {
	return &PostIpamGcIpsOK{}
}

/* PostIpamGcIpsOK describes a response with status code 200, with default header values.

Success
*/
type PostIpamGcIpsOK struct {
}

func (o *PostIpamGcIpsOK) Error() string {
	return fmt.Sprintf("[POST /ipam/gc_ips][%d] postIpamGcIpsOK ", 200)
}

func (o *PostIpamGcIpsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostIpamGcIpsInternalServerError creates a PostIpamGcIpsInternalServerError with default headers values
func NewPostIpamGcIpsInternalServerError() *PostIpamGcIpsInternalServerError {
	return &PostIpamGcIpsInternalServerError{}
}

/* PostIpamGcIpsInternalServerError describes a response with status code 500, with default header values.

Global gc failure
*/
type PostIpamGcIpsInternalServerError struct {
}

func (o *PostIpamGcIpsInternalServerError) Error() string {
	return fmt.Sprintf("[POST /ipam/gc_ips][%d] postIpamGcIpsInternalServerError ", 500)
}

func (o *PostIpamGcIpsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
