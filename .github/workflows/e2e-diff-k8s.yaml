name: call e2e

env:
  CLUSTER_NAME: spider
  E2E_TIME_OUT: 60m

on:
  workflow_call:
    inputs:
      ip_family:
        required: true
        type: string
      image_tag:
        required: true
        type: string
      ref:
        required: false
        type: string
      k8s_version:
        required: true
        type: string
      run_e2e_test:
        required: true
        type: string
      push:
        required: false
        type: boolean
      charts:
        required: false
        type: string

jobs:
  call_e2e:
    runs-on: ubuntu-latest
    steps:
      - name: Prepare
        id: prepare
        run: |
          echo "ref: ${{ inputs.ref }} "
          echo "===== image "
          echo "ci image tag: ghcr.io/${{ github.repository }}/spiderpool-controller-ci:${{ inputs.image_tag }}"
          echo "ci race image tag: ghcr.io/${{ github.repository }}/spiderpool-controller-ci:${{ inputs.image_tag }}-race"
          echo "ci image tag: ghcr.io/${{ github.repository }}/spiderpool-agent-ci:${{ inputs.image_tag }}"
          echo "ci race image tag: ghcr.io/${{ github.repository }}/spiderpool-agent-ci:${{ inputs.image_tag }}-race"
          echo "===== chart "
          echo "chart package artifact: ${{ inputs.charts }}"
          TMP=` date +%m%d%H%M%S `
          E2E_CLUSTER_NAME="spiderpool${TMP}"
          echo ::set-output name=clusterName::${E2E_CLUSTER_NAME}

      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          persist-credentials: false
          ref: ${{ inputs.ref }}

      - name: Setup Golang
        uses: actions/setup-go@v3
        with:
          go-version: 1.20.0
          id: go

      - name: Install Kind Bin
        uses: helm/kind-action@v1.5.0
        with:
          install_only: true

      - name: Install Tools
        run: |
          # install kind/p2ctl/helm/ginkgo
          bash ./test/scripts/install-tools.sh

      - name: Download spiderpool-agent image
        uses: actions/download-artifact@v3
        with:
          name: image-tar-spiderpool-agent
          path: test/.download

      - name: Download spiderpool-controller image
        uses: actions/download-artifact@v3
        with:
          name: image-tar-spiderpool-controller
          path: test/.download

      - name: Load Images
        run: |
          TAR_FILES=` ls test/.download `
          echo $TAR_FILES
          for ITEM in $TAR_FILES ; do
              IMAGE_NAME=${ITEM%*.tar}
              echo ${IMAGE_NAME}
              cat test/.download/${ITEM} | docker import - ${IMAGE_NAME}:${{ inputs.image_tag }}
          done

      - name: Setting up a specific version of kind cluster
        uses: nick-invision/retry@v2
        with:
          timeout_minutes: 10
          max_attempts: 3
          shell: bash
          command: |
                make e2e_init -e E2E_CLUSTER_NAME=${{ steps.prepare.outputs.clusterName }} \
                    -e TEST_IMAGE_TAG=${{ inputs.image_tag }} \
                    -e SPIDERPOOL_AGENT_IMAGE_NAME=spiderpool-agent-race   \
                    -e SPIDERPOOL_CONTROLLER_IMAGE_NAME=spiderpool-controller-race \
                    -e E2E_IP_FAMILY=${{ inputs.ip_family }} -e PYROSCOPE_LOCAL_PORT="" \
                    -e E2E_KIND_IMAGE_TAG=${{ inputs.k8s_version }}

      - name: Run e2e Test
        id: run_e2e
        if: ${{ inputs.run_e2e_test == 'true' }}
        continue-on-error: true
        run: |
          echo ${{ github.event.inputs.labels }}
          RESULT=0
          make e2e_test -e E2E_CLUSTER_NAME=${{ steps.prepare.outputs.clusterName }}  \
              -e E2E_GINKGO_LABELS=${{ inputs.ref.e2e_labels }} \
              -e E2E_TIMEOUT=${{ env.E2E_TIME_OUT }} \
              -e E2E_IP_FAMILY=${{ inputs.ip_family }} || RESULT=1
          if ((RESULT==0)) ; then
              echo ::set-output name=pass::true
          else
              echo ::set-output name=pass::false
          fi
          if [ -f "test/e2edebugLog" ] ; then
              echo ::set-output name=updaloadlog::true
          else
              echo ::set-output name=updaloadlog::false
          fi
          if [ -f "./e2ereport.json" ] ; then
              echo "error, did not find e2e report"
              echo ::set-output name=upload::true
          else
              echo ::set-output name=upload::false
          fi

      - name: Upload e2e log
        if: ${{ inputs.run_e2e_test == 'true' }}
        uses: actions/upload-artifact@v3.1.2
        with:
          name: ${{ inputs.ip_family }}-debuglog.txt
          path: test/e2edebugLog.txt
          retention-days: 7

      - name: Upload e2e report
        if: ${{ steps.run_e2e.outputs.upload == 'true' && inputs.run_e2e_test == 'true' }}
        uses: actions/upload-artifact@v3.1.2
        with:
          name: ${{ inputs.ip_family }}-e2ereport.json
          path: e2ereport.json
          retention-days: 1

      - name: Show e2e Result
        if: ${{ inputs.run_e2e_test == 'true' }}
        run: |
          if ${{ steps.run_e2e.outputs.pass == 'true' }} ;then
              exit 0
          else
              exit 1
          fi
