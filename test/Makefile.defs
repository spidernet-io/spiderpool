#============ e2e-kind-config ====================
# iptables or ipvs, default iptables
E2E_KUBE_PROXY_MODE ?= iptables

# ipv4 or ipv6 or dual, default ipv4
E2E_IP_FAMILY ?= dual

# true is one node cluster, false is three node cluster, default true
E2E_STANDARD_CLUSTER ?= true

# kubernetes version, default v1.22.1
E2E_KIND_IMAGE_TAG ?= v1.22.1

# disable default cni, default true
E2E_DISABLE_DEFAULT_CNI ?= true

INSTALL_MACVLAN ?= true

INSTALL_SPIDER ?= false

INSTALL_MULTUS ?= true

CNI_PACKAGE_VERSION ?= v0.8.5

#============ ginkgo-custom-flag ====================
E2E_CLUSTER_NAME ?= spider

RELEASE_NAME ?= spiderpool
RELEASE_NAMESPACE ?= kube-system

# multi flag separated by commas,like setup,ippool
E2E_GINKGO_LABELS ?=

GINKGO_OPTION ?=

E2E_TIMEOUT ?= 60m

E2E_GINKGO_PROCS ?= 4

#============Image version===========
IMAGE_MULTUS_NAME := ghcr.io/k8snetworkplumbingwg/multus-cni:v3.8-$(ARCH)
IMAGE_WHEREABOUTS_NAME := ghcr.io/k8snetworkplumbingwg/whereabouts:latest-$(ARCH)
TEST_IMAGE_NAME := alpine:latest

#USE_TLS_METHOD := certmanager
USE_TLS_METHOD := provided

CERT_MANAGER_VERSION := v1.8.0
IMAGE_CERT_MANAGER_REPO := quay.io/jetstack
IMAGE_CERT_MANAGER_NAME := $(IMAGE_CERT_MANAGER_REPO)/cert-manager-cainjector:$(CERT_MANAGER_VERSION) $(IMAGE_CERT_MANAGER_REPO)/cert-manager-cainjector:$(CERT_MANAGER_VERSION) $(IMAGE_CERT_MANAGER_REPO)/cert-manager-webhook:$(CERT_MANAGER_VERSION) $(IMAGE_CERT_MANAGER_REPO)/cert-manager-controller:$(CERT_MANAGER_VERSION)
CERT_MANAGER_ISSUER_NAME := selfsigned

#================= multus
CNI_NAMESPACE := kube-system
MULTUS_DEFAULT_CNI_NAME := macvlan-cni-default
MULTUS_ADDITIONAL_CNI_NAME := macvlan-cni2


#============Tmp Path================
# do not modify this ,it is also written on CI workflow file
DOWNLOAD_DIR := $(ROOT_DIR)/test/.download
CLUSTER_DIR := $(ROOT_DIR)/test/.cluster
E2E_KUBECONFIG := $(CLUSTER_DIR)/$(E2E_CLUSTER_NAME)/.kube/config

#=============http_proxy=============
http_proxy ?=

