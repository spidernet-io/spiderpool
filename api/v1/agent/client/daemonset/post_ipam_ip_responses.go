// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2022 Authors of spidernet-io
// SPDX-License-Identifier: Apache-2.0

package daemonset

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/spidernet-io/spiderpool/api/v1/agent/models"
)

// PostIpamIPReader is a Reader for the PostIpamIP structure.
type PostIpamIPReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostIpamIPReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostIpamIPOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 500:
		result := NewPostIpamIPFailure()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPostIpamIPOK creates a PostIpamIPOK with default headers values
func NewPostIpamIPOK() *PostIpamIPOK {
	return &PostIpamIPOK{}
}

/*
PostIpamIPOK describes a response with status code 200, with default header values.

Success
*/
type PostIpamIPOK struct {
	Payload *models.IpamAddResponse
}

// IsSuccess returns true when this post ipam Ip o k response has a 2xx status code
func (o *PostIpamIPOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post ipam Ip o k response has a 3xx status code
func (o *PostIpamIPOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post ipam Ip o k response has a 4xx status code
func (o *PostIpamIPOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this post ipam Ip o k response has a 5xx status code
func (o *PostIpamIPOK) IsServerError() bool {
	return false
}

// IsCode returns true when this post ipam Ip o k response a status code equal to that given
func (o *PostIpamIPOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the post ipam Ip o k response
func (o *PostIpamIPOK) Code() int {
	return 200
}

func (o *PostIpamIPOK) Error() string {
	return fmt.Sprintf("[POST /ipam/ip][%d] postIpamIpOK  %+v", 200, o.Payload)
}

func (o *PostIpamIPOK) String() string {
	return fmt.Sprintf("[POST /ipam/ip][%d] postIpamIpOK  %+v", 200, o.Payload)
}

func (o *PostIpamIPOK) GetPayload() *models.IpamAddResponse {
	return o.Payload
}

func (o *PostIpamIPOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.IpamAddResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostIpamIPFailure creates a PostIpamIPFailure with default headers values
func NewPostIpamIPFailure() *PostIpamIPFailure {
	return &PostIpamIPFailure{}
}

/*
PostIpamIPFailure describes a response with status code 500, with default header values.

Allocation failure
*/
type PostIpamIPFailure struct {
	Payload models.Error
}

// IsSuccess returns true when this post ipam Ip failure response has a 2xx status code
func (o *PostIpamIPFailure) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post ipam Ip failure response has a 3xx status code
func (o *PostIpamIPFailure) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post ipam Ip failure response has a 4xx status code
func (o *PostIpamIPFailure) IsClientError() bool {
	return false
}

// IsServerError returns true when this post ipam Ip failure response has a 5xx status code
func (o *PostIpamIPFailure) IsServerError() bool {
	return true
}

// IsCode returns true when this post ipam Ip failure response a status code equal to that given
func (o *PostIpamIPFailure) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the post ipam Ip failure response
func (o *PostIpamIPFailure) Code() int {
	return 500
}

func (o *PostIpamIPFailure) Error() string {
	return fmt.Sprintf("[POST /ipam/ip][%d] postIpamIpFailure  %+v", 500, o.Payload)
}

func (o *PostIpamIPFailure) String() string {
	return fmt.Sprintf("[POST /ipam/ip][%d] postIpamIpFailure  %+v", 500, o.Payload)
}

func (o *PostIpamIPFailure) GetPayload() models.Error {
	return o.Payload
}

func (o *PostIpamIPFailure) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
