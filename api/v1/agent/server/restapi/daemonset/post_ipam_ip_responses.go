// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2022 Authors of spidernet-io
// SPDX-License-Identifier: Apache-2.0

package daemonset

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/spidernet-io/spiderpool/api/v1/agent/models"
)

// PostIpamIPOKCode is the HTTP code returned for type PostIpamIPOK
const PostIpamIPOKCode int = 200

/*
PostIpamIPOK Success

swagger:response postIpamIpOK
*/
type PostIpamIPOK struct {

	/*
	  In: Body
	*/
	Payload *models.IpamAddResponse `json:"body,omitempty"`
}

// NewPostIpamIPOK creates PostIpamIPOK with default headers values
func NewPostIpamIPOK() *PostIpamIPOK {

	return &PostIpamIPOK{}
}

// WithPayload adds the payload to the post ipam Ip o k response
func (o *PostIpamIPOK) WithPayload(payload *models.IpamAddResponse) *PostIpamIPOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post ipam Ip o k response
func (o *PostIpamIPOK) SetPayload(payload *models.IpamAddResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostIpamIPOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostIpamIPFailureCode is the HTTP code returned for type PostIpamIPFailure
const PostIpamIPFailureCode int = 500

/*
PostIpamIPFailure Allocation failure

swagger:response postIpamIpFailure
*/
type PostIpamIPFailure struct {

	/*
	  In: Body
	*/
	Payload models.Error `json:"body,omitempty"`
}

// NewPostIpamIPFailure creates PostIpamIPFailure with default headers values
func NewPostIpamIPFailure() *PostIpamIPFailure {

	return &PostIpamIPFailure{}
}

// WithPayload adds the payload to the post ipam Ip failure response
func (o *PostIpamIPFailure) WithPayload(payload models.Error) *PostIpamIPFailure {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post ipam Ip failure response
func (o *PostIpamIPFailure) SetPayload(payload models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostIpamIPFailure) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}
