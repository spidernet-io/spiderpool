// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2022 Authors of spidernet-io
// SPDX-License-Identifier: Apache-2.0

package daemonset

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/spidernet-io/spiderpool/api/v1/agent/models"
)

// PostIpamIpsReader is a Reader for the PostIpamIps structure.
type PostIpamIpsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostIpamIpsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostIpamIpsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 500:
		result := NewPostIpamIpsFailure()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPostIpamIpsOK creates a PostIpamIpsOK with default headers values
func NewPostIpamIpsOK() *PostIpamIpsOK {
	return &PostIpamIpsOK{}
}

/*
PostIpamIpsOK describes a response with status code 200, with default header values.

Success
*/
type PostIpamIpsOK struct {
}

// IsSuccess returns true when this post ipam ips o k response has a 2xx status code
func (o *PostIpamIpsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post ipam ips o k response has a 3xx status code
func (o *PostIpamIpsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post ipam ips o k response has a 4xx status code
func (o *PostIpamIpsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this post ipam ips o k response has a 5xx status code
func (o *PostIpamIpsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this post ipam ips o k response a status code equal to that given
func (o *PostIpamIpsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the post ipam ips o k response
func (o *PostIpamIpsOK) Code() int {
	return 200
}

func (o *PostIpamIpsOK) Error() string {
	return fmt.Sprintf("[POST /ipam/ips][%d] postIpamIpsOK ", 200)
}

func (o *PostIpamIpsOK) String() string {
	return fmt.Sprintf("[POST /ipam/ips][%d] postIpamIpsOK ", 200)
}

func (o *PostIpamIpsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostIpamIpsFailure creates a PostIpamIpsFailure with default headers values
func NewPostIpamIpsFailure() *PostIpamIpsFailure {
	return &PostIpamIpsFailure{}
}

/*
PostIpamIpsFailure describes a response with status code 500, with default header values.

Allocation failure
*/
type PostIpamIpsFailure struct {
	Payload models.Error
}

// IsSuccess returns true when this post ipam ips failure response has a 2xx status code
func (o *PostIpamIpsFailure) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post ipam ips failure response has a 3xx status code
func (o *PostIpamIpsFailure) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post ipam ips failure response has a 4xx status code
func (o *PostIpamIpsFailure) IsClientError() bool {
	return false
}

// IsServerError returns true when this post ipam ips failure response has a 5xx status code
func (o *PostIpamIpsFailure) IsServerError() bool {
	return true
}

// IsCode returns true when this post ipam ips failure response a status code equal to that given
func (o *PostIpamIpsFailure) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the post ipam ips failure response
func (o *PostIpamIpsFailure) Code() int {
	return 500
}

func (o *PostIpamIpsFailure) Error() string {
	return fmt.Sprintf("[POST /ipam/ips][%d] postIpamIpsFailure  %+v", 500, o.Payload)
}

func (o *PostIpamIpsFailure) String() string {
	return fmt.Sprintf("[POST /ipam/ips][%d] postIpamIpsFailure  %+v", 500, o.Payload)
}

func (o *PostIpamIpsFailure) GetPayload() models.Error {
	return o.Payload
}

func (o *PostIpamIpsFailure) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
